@{
    ViewBag.Title = "2D Winner";
}
@using TresDos.Application.DTOs
@using TresDos.Application.ViewModel.BetModel
@model TwoDWinnersViewModel

<style>
    #tbWinners {
        width: 100% !important;
    }
</style>
@using (Html.BeginForm("Winners", "2d", FormMethod.Post))
{
    <div class="container">
        <div class="row justify-content-center mb-3">
            <div class="col-12 col-md-8 col-lg-6">
                <div class="row row-cols-2 g-3">
                    <div class="col">
                        @Html.TextBoxFor(model => model.DrawDate, "{0:yyyy-MM-dd}", 
                            new { type = "date", @class = "form-control" })
                    </div>
                    <div class="col">
                        @Html.DropDownListFor(m => m.DrawType, Model.DrawTypeOptions, 
                            new { @class = "form-select" })
                    </div>
                </div>
                <div class="row row-cols-2 g-3">
                    <div class="col">
                        First Digit
                        @Html.TextBoxFor(model => model.FirstDigit,
                                 new { type = "number", @min = "1", @max = "31", @class = "form-control" })
                    </div>
                    <div class="col">
                        Second Digit
                        @Html.TextBoxFor(model => model.SecondDigit,
                                 new { type = "number", @min = "1", @max = "31", @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center mb-3">        
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span>2D - Winners</span>
                    <span><strong>@Model.DrawDate.ToString("dddd, MMMM dd, yyyy")</strong></span>
                </div>
                <div class="card-body">
                    <button type="submit" name="action" value="Generate" class="btn btn-primary w-100 w-md-auto">
                        Generate
                    </button>
                <div class="table-responsive">
                    <table 
                        id="tbWinners" 
                        style="width:100%" 
                        class="table table-bordered table-striped display nowrap">
                        <thead>
                            <tr>
                                <th>Admin</th>
                                <th>Bettor</th>
                                <th>Bet</th>
                                <th>Remarks</th>
                                <th>Win Prize</th>
                               @*  <th>Draw Date</th>
                                <th>Draw Type</th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Winners.Count > 0)
                            {
                                @foreach (var item in Model.Winners)
                                {
                                    <tr>
                                        <td>@item.Admin</td>
                                        <td>@item.Bettor?.Substring(1)</td>
                                        @{
                                            var amountStr = item.Amount.ToString("N2").Replace(".00", "");
                                            var firstLetter = string.IsNullOrEmpty(item.WinType) ? "" : item.WinType[0].ToString();
                                        }
                                        <td>@item.FirstDigit - @item.SecondDigit = <span>@amountStr</span><span>@firstLetter</span></td>
                                        <td>@item.WinType</td>
                                        <td>@item.WinPrize?.ToString("N2")</td>
                                       @*  <td>@item.DrawDate.ToString("yyyy-MM-dd")</td>
                                        <td>@item.DrawType</td> *@
                                    </tr>
                                }
                            }
                            else
                            {
                               @*  <tr>
                                    <td colspan="9" class="text-center">No winners found for the selected date and draw type.</td>
                                </tr> *@
                            }
                        </tbody>
                    </table>
                </div>
                </div>
            </div>
     </div>
}

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $('#tbWinners').DataTable({
                autoWidth: false,
                paging: false,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        title: '', // ❌ No default title
                        orientation: 'portrait',
                        pageSize: 'A4',
                        customize: function (doc) {
                            
                            // Optional: Set column widths to auto in the table
                            var table = doc.content.find(c => c.table); // find the data table

                            if (table) {
                                var columnCount = table.table.body[0].length;

                                // Set each column width to '*'
                                table.table.widths = Array(columnCount).fill('*');
                            }

                            // ✅ Add a table as a header
                            doc.content.splice(0, 0, {
                                table: {
                                    widths: ['*', '*', '*'],
                                    body: [
                                        [
                                            { text: '@Model.DrawDate.ToString("dddd, MMMM dd, yyyy")', bold: true, alignment: 'left' },
                                            { text: '' },
                                            { text: '@Model.DrawType', alignment: 'right', fontSize: 15 }
                                        ],
                                        [
                                            { text: '@Model.FirstDigit - @Model.SecondDigit', bold: true, alignment: 'left', fontSize: 15 },
                                            { text: '@Model.Winners.Count().ToString() Winners', bold: true, alignment: 'left', fontSize: 15 },
                                            { text: 'PHP @Model.Winners.Sum(a => a.WinPrize)?.ToString("N2")', alignment: 'right', fontSize: 15 }
                                        ]
                                    ]
                                },
                                layout: 'noBorders',
                                margin: [0, 0, 0, 10] // bottom margin after the header
                            });

                            doc.footer = function (currentPage, pageCount) {
                                return {
                                    text: 'Page ' + currentPage + ' of ' + pageCount,
                                    alignment: 'center',
                                    margin: [0, 10, 0, 0]
                                };
                            };

                            doc.styles.tableHeader = {
                                fillColor: '#2a3f54',
                                color: 'white',
                                bold: true,
                                fontSize: 12
                            };
                        }
                    }
                ]
            });
        });
    </script>

    <!-- Enables client-side validation -->
    <partial name="_ValidationScriptsPartial" />
}