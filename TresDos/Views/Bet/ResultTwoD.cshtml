@model LottoBatch
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>2D Lotto Results</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/lotto.css" rel="stylesheet" />

</head>
<body class="container my-4">

    <h1 class="mb-4">2D Lotto Entry Validation</h1>

    @if (Model.Entries.Count == 0)
    {
        <p>No entries found.</p>
    }
    else
    {
        foreach (var entry in Model.Entries)
        {
            <div class="bettor-name">@entry.BettorName</div>

            <!-- DESKTOP TABLE -->
            <div class="table-responsive desktop-table mt-2 mb-4">
                <table class="table table-bordered table-sm table-striped text-center align-middle">
                    <thead class="table-light">
                        <tr>
                            <!--<th>#</th>-->
                            <th>Raw Input</th>
                            <th>Combination</th>
                            <th>Amount</th>
                            <th>Bet Type</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int count1 = 1;
                            foreach (var bet in entry.Bets)
                            {
                                <tr>
                                    <!--<td>@count1</td>-->
                                    <td>@bet.RawInput</td>
                                    <td>@bet.Combination</td>
                                    <td>@bet.Amount</td>
                                    <td>@bet.BetTypeName</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(bet.Error))
                                        {
                                            <span class="error">@bet.Error</span>
                                        }
                                        else
                                        {
                                            <span class="valid">Valid</span>
                                        }
                                    </td>
                                </tr>
                                count1++;
                            }
                        }
                    </tbody>
                </table>
            </div>

            <!-- MOBILE CARD LAYOUT -->
            <div class="mobile-cards">
                @{
                    int count = 1;
                    foreach (var bet in entry.Bets)
                    {
                        <div class="card mb-3">
                            <div class="card-header">
                                @bet.Combination=@bet.Amount@bet.BetType
                            </div>
                            <div class="card-body">
                                <!--<h6 class="card-title mb-2">#@count</h6>-->
                                <p class="mb-1"><strong>Raw Input:</strong> @bet.RawInput</p>
                                <p class="mb-1"><strong>Combination:</strong> @bet.Combination</p>
                                <p class="mb-1"><strong>Amount:</strong> @bet.Amount</p>
                                <p class="mb-1"><strong>Bet Type:</strong> @bet.BetTypeName</p>
                                <p class="mb-0">
                                    <strong>Status:</strong>
                                    @if (!string.IsNullOrEmpty(bet.Error))
                                    {
                                        <span class="error">@bet.Error</span>
                                    }
                                    else
                                    {
                                        <span class="valid">Valid</span>
                                    }
                                </p>
                            </div>
                        </div>
                        count++;
                    }
                }
            </div>
        }
    }

    <h2>📋 Copy Bets</h2>

    <div class="copy-buttons mb-3">
        <button class="btn btn-primary me-2 mb-2" onclick="copyText('validBets')">Copy Valid Bets</button>
        <button class="btn btn-danger me-2 mb-2" onclick="copyText('invalidBets')">Copy Invalid Bets</button>
        <button class="btn btn-secondary mb-2" onclick="copyText('allBets')">Copy All Bets</button>
    </div>

    <div class="bet-section">
        <h4>
            ✅ Valid Bets
            <button class="btn btn-link p-0" onclick="toggleSection('validBetsSection', this)">Show</button>
        </h4>
        <div id="validBetsSection" style="display: none;">
            <textarea id="validBets" class="form-control mb-3" rows="8" readonly>
                @{
                    foreach (var entry in Model.Entries)
                    {
                        var validBets = entry.Bets.Where(b => string.IsNullOrEmpty(b.Error)).ToList();
                        if (validBets.Any())
                        {
                            @($"@{entry.BettorName}\n")
                            foreach (var bet in validBets)
                            {
                                @($"{bet.RawInput}\n")
                            }
                            @("\n")
                        }
                    }
                }
        </textarea>
        </div>

        <h4>
            ❌ Invalid Bets
            <button class="btn btn-link p-0" onclick="toggleSection('invalidBetsSection', this)">Show</button>
        </h4>
        <div id="invalidBetsSection" style="display: none;">
            <textarea id="invalidBets" class="form-control mb-3" rows="8" readonly>
                @{
                    foreach (var entry in Model.Entries)
                    {
                        var invalidBets = entry.Bets.Where(b => !string.IsNullOrEmpty(b.Error)).ToList();
                        if (invalidBets.Any())
                        {
                            @($"@{entry.BettorName}\n")
                            foreach (var bet in invalidBets)
                            {
                                @($"{bet.RawInput}\n")
                            }
                            @("\n")
                        }
                    }
                }
        </textarea>
        </div>

        <h4>
            📋 All Bets
            <button class="btn btn-link p-0" onclick="toggleSection('allBetsSection', this)">Show</button>
        </h4>
        <div id="allBetsSection" style="display: none;">
            <textarea id="allBets" class="form-control mb-3" rows="8" readonly>
                @{
                    foreach (var entry in Model.Entries)
                    {
                        @($"@{entry.BettorName}\n")
                        foreach (var bet in entry.Bets)
                        {
                            @($"{bet.RawInput}\n")
                        }
                        @("\n")
                    }
                }
        </textarea>
        </div>
    </div>

    <script>
        function copyText(id) {
            const textarea = document.getElementById(id);
            textarea.select();
            textarea.setSelectionRange(0, 99999); // for mobile
            document.execCommand("copy");
            alert("Copied!");
        }
    </script>

    <script>
        function toggleSection(sectionId, btn) {
            const section = document.getElementById(sectionId);
            if (section.style.display === "none") {
                section.style.display = "block";
                btn.textContent = "Hide";
            } else {
                section.style.display = "none";
                btn.textContent = "Show";
            }
        }
    </script>
</body>
</html>